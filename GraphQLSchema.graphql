type UserGQLModel {
  id: ID!
}

type RoleTypeGQLModel {
  id: ID!
}

type GroupGQLModel {
  id: ID!
}

type EventGQLModel {
  id: ID!
}

type RBACObjectGQLModel {
  id: ID!
}

type FinanceCategoryGQLModel {
  id: ID!
  name: String!
  nameEn: String!
  changedby: UserGQLModel
  lastchange: String!
  created: String
  createdby: UserGQLModel
  rbacobject: RBACObjectGQLModel
  userId: UserGQLModel
}

type FinanceGQLModel {
  id: ID!
  name: String!
  amount: Float!
  changedby: UserGQLModel
  lastchange: String!
  created: String
  createdby: UserGQLModel
  rbacobject: RBACObjectGQLModel
  valid: Boolean!
  project: ProjectGQLModel
  financeType: [FinanceTypeGQLModel!]!
}

type FinanceTypeGQLModel {
  id: ID!
  name: String!
  nameEn: String!
  changedby: UserGQLModel
  lastchange: String!
  created: String
  createdby: UserGQLModel
  rbacobject: RBACObjectGQLModel
  valid: Boolean!
  finances: [FinanceGQLModel!]!
  category: FinanceCategoryGQLModel
}

type MilestoneGQLModel {
  id: ID!
  name: String!
  startdate: String!
  enddate: String!
  changedby: UserGQLModel
  lastchange: String!
  created: String
  createdby: UserGQLModel
  rbacobject: RBACObjectGQLModel
  valid: Boolean!
  project: ProjectGQLModel
  previous: [MilestoneGQLModel!]!
  nexts: [MilestoneGQLModel!]!
}

type ProjectGQLModel {
  id: ID!
  name: String!
  startdate: String!
  enddate: String!
  created: String
  lastchange: String!
  createdby: UserGQLModel
  changedby: UserGQLModel
  rbacobject: RBACObjectGQLModel
  valid: Boolean!
  projectType: ProjectTypeGQLModel
  finances: [FinanceGQLModel!]!
  milestones: [MilestoneGQLModel!]!
  group: GroupGQLModel
  team: GroupGQLModel
}

type ProjectCategoryGQLModel {
  id: ID!
  name: String!
  nameEn: String!
  changedby: UserGQLModel
  lastchange: String!
  created: String
  createdby: UserGQLModel
  rbacobject: RBACObjectGQLModel
}

type ProjectTypeGQLModel {
  id: ID!
  name: String!
  nameEn: String!
  created: String
  lastchange: String!
  createdby: UserGQLModel
  changedby: UserGQLModel
  rbacobject: RBACObjectGQLModel
  valid: Boolean!
  projects: [ProjectGQLModel!]!
  category: ProjectCategoryGQLModel
}

type StatementOfWorkGQLModel {
  id: ID!
  lastchange: String!
  startdate: String!
  enddate: String!
  created: String
  createdby: UserGQLModel
  changedby: UserGQLModel
  rbacobject: RBACObjectGQLModel
  valid: Boolean!
  project: ProjectGQLModel
  event: EventGQLModel
}

type Query {
  sayHelloProjects: String
  financeCategoryById: FinanceCategoryGQLModel
  financeCategoryPage: [FinanceCategoryGQLModel!]!
  financeById: FinanceGQLModel
  financePage: [FinanceGQLModel!]!
  financeTypeById: FinanceTypeGQLModel
  financeTypePage: [FinanceTypeGQLModel!]!
  milestoneById: MilestoneGQLModel
  milestonePage: [MilestoneGQLModel!]!
  projectCategoryById: ProjectCategoryGQLModel
  projectCategoryPage: [ProjectCategoryGQLModel!]!
  projectById: ProjectGQLModel
  projectPage: [ProjectGQLModel!]!
  projectTypeById: ProjectTypeGQLModel
  projectTypePage: [ProjectTypeGQLModel!]!
  statementOfWorkById: StatementOfWorkGQLModel
  statementOfWorkPage: [StatementOfWorkGQLModel!]!
}

type _Service {
  sdl: String!
}

type Mutation {
  financeCategoryInsert: FinanceCategoryResultGQLModel!
  financeCategoryUpdate: FinanceCategoryResultGQLModel!
  financeCategoryDelete: FinanceCategoryResultGQLModel!
  financeInsert: FinanceResultGQLModel!
  financeUpdate: FinanceResultGQLModel!
  financeTypeInsert: FinanceTypeResultGQLModel!
  financeTypeUpdate: FinanceTypeResultGQLModel!
  milestoneInsert: MilestoneResultGQLModel!
  milestoneUpdate: MilestoneResultGQLModel!
  milestonesLinkAdd: MilestoneResultGQLModel!
  projectCategoryInsert: ProjectCategoryResultGQLModel!
  projectCategoryUpdate: ProjectCategoryResultGQLModel!
  projectCategoryDelete: ProjectCategoryResultGQLModel!
  projectInsert: ProjectResultGQLModel!
  projectUpdate: ProjectResultGQLModel!
  projectTypeInsert: ProjectTypeResultGQLModel!
  projectTypeUpdate: ProjectTypeResultGQLModel!
  statementOfWorkInsert: StatementOfWorkResultGQLModel!
  statementOfWorkUpdate: StatementOfWorkResultGQLModel!
}

type FinanceCategoryResultGQLModel {
  id: ID!
  msg: String!
  project: FinanceCategoryGQLModel
}

type FinanceResultGQLModel {
  id: ID!
  msg: String!
  finance: FinanceGQLModel
}

type FinanceTypeResultGQLModel {
  id: ID!
  msg: String!
  finance: FinanceTypeGQLModel
}

type MilestoneResultGQLModel {
  id: ID!
  msg: String!
  milestone: MilestoneGQLModel
}

type ProjectCategoryResultGQLModel {
  id: ID!
  msg: String!
  project: ProjectCategoryGQLModel
}

type ProjectResultGQLModel {
  id: ID!
  msg: String!
  project: ProjectGQLModel
}

type ProjectTypeResultGQLModel {
  id: ID!
  msg: String!
  project: ProjectTypeGQLModel
}

type StatementOfWorkResultGQLModel {
  id: ID!
  msg: String!
  statementofwork: StatementOfWorkGQLModel
}

type __Schema {
  description: String
  types: [__Type!]!
  queryType: __Type!
  mutationType: __Type
  subscriptionType: __Type
  directives: [__Directive!]!
}

type __Type {
  kind: __TypeKind!
  name: String
  description: String
  specifiedByURL: String
  fields: [__Field!]
  interfaces: [__Type!]
  possibleTypes: [__Type!]
  enumValues: [__EnumValue!]
  inputFields: [__InputValue!]
  ofType: __Type
}

enum __TypeKind {
  SCALAR
  OBJECT
  INTERFACE
  UNION
  ENUM
  INPUT_OBJECT
  LIST
  NON_NULL
}

type __Field {
  name: String!
  description: String
  args: [__InputValue!]!
  type: __Type!
  isDeprecated: Boolean!
  deprecationReason: String
}

type __InputValue {
  name: String!
  description: String
  type: __Type!
  defaultValue: String
  isDeprecated: Boolean!
  deprecationReason: String
}

type __EnumValue {
  name: String!
  description: String
  isDeprecated: Boolean!
  deprecationReason: String
}

type __Directive {
  name: String!
  description: String
  isRepeatable: Boolean!
  locations: [__DirectiveLocation!]!
  args: [__InputValue!]!
}

enum __DirectiveLocation {
  QUERY
  MUTATION
  SUBSCRIPTION
  FIELD
  FRAGMENT_DEFINITION
  FRAGMENT_SPREAD
  INLINE_FRAGMENT
  VARIABLE_DEFINITION
  SCHEMA
  SCALAR
  OBJECT
  FIELD_DEFINITION
  ARGUMENT_DEFINITION
  INTERFACE
  UNION
  ENUM
  ENUM_VALUE
  INPUT_OBJECT
  INPUT_FIELD_DEFINITION
}

