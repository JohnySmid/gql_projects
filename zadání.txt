PROJECTS (2 studenti) Šmíd, Špáník
   ✓ Entity (ProjectGQLModel, ProjectTypeGQLModel, ProjectCategoryGQLModel)
    
   ✓ Entity (FinanceGQLModel, FinanceTypeGQLModel, FinanceCategoryGQLModel)
    
   ✓ rozšiřte datové struktury (tabulky) o možnost ukládat výkazy práce (výkaz práce je pole entit s počátkem a koncem činnosti a stručným popisem – EventGQLModel?) a zápisy ze schůzek (ContentGQLModel), uvažte využití EVENTS, PRESENCES
    (spojit s events nový model N:M) start co se stalo? (Na konzultaci byl vytvořen model, který se schválil)
   
   ✓ Modely v databázi pomocí SQLAlchemy, API endpoint typu GraphQL s pomocí knihovny Strawberry.
    
   ✓ Přístup k databázi řešte důsledně přes AioDataloder, resp. (https://github.com/hrbolek/uoishelpers/blob/main/uoishelpers/dataloaders.py).

   ✓ bezpečte kompletní CRUD operace nad entitami
    
   ✓ UD operace jako návratový typ nejméně se třemi prvky id, msg a „entityresult“ (pojmenujte adekvátně podle dotčené entity), vhodné přidat možnost nadřízené entity, speciálně pro operaci D.
    
   ✓ Řešte autorizaci operací (permission classes).
    
   ✓ Kompletní CRUD dotazy na GQL v souboru externalids_queries.json (dictionary), jméno klíče nechť vhodně identifikuje operaci, hodnota je dictionary s klíči query (obsahuje parametrický dotaz) nebo mutation (obsahuje parametrické mutation) a variables (obsahuje dictionary jako testovací hodnoty).
    
   ✓ Kompletní popisy API v kódu (description u GQLModelů) a popisy DB vrstvy (comment u DBModelů).
    
   ✓ Zabezpečte více jak 90% code test coverage (standard pytest).

Hodnocení:
Absolvování jednoho projektového dne (součástí je commit na github ne starší než 1 týden) 5 b (x3, tj. 15 b), pod omluvě lze nahradit individuálně
Příběh (na githubu) 5 b (součástí příběhu je časová posloupnost commitů, definice problémů k vyřešení)
Řádné komentáře v kódu (včetně description u GQLModelů, strawberry fieldsa a comment u DBModelů) 5 b
Vygenerovaná dokumentace 5 b
Prokázaná funkčnost jako samostatný kontejner 5 b
Prokázaná funkčnost jako prvek docker-compose (s odkazem na samostatný kontejner z docker hubu) 5 b
Vytvoření docker containeru, publikace na Docker hub 5 b
Kompletní CRUD 5 b
_json 5 b
Obhajoba 60 b, každý student předvede „dopracovaný“ SQL a GQL model (bez ohledu na týmovou práci)
Lze získat až 120 bodů. Předmětem projdete, pokud budete mít více než 50 bodů, hodnocení „A“ získáte za 90 bodů a více

Docs:
 - install npm into docker image (must be inside /app)
 - same with dociql 
      = both are being downloaded inside Dockerfile
 - edit enviroments.txt and add Docs end point (http://localhost:4400/, I still don't know, if its necessary)
 - next you have to enable port 4400, inside Dockerfile and docker-compose file
 - add config.yml file and edit it
 - last step, maually write command: dociql -p 4400 -d config.yml 
      = or you can add it into CMD[] parameter inside Dockerfile